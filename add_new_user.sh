#!/bin/bash

# V√©rifie si le script est ex√©cut√© en root
if [ "$(id -u)" -ne 0 ]; then
    echo "‚ùå Ce script doit √™tre ex√©cut√© en root."
    exit 1
fi

# V√©rifie si un nom d‚Äôutilisateur a √©t√© pass√© en argument
if [ -z "$1" ]; then
    echo "Usage: $0 nom_utilisateur"
    exit 1
fi

USERNAME=$1
USER_HOME="/home/$USERNAME"

echo "‚û°Ô∏è Cr√©ation de l‚Äôutilisateur : $USERNAME"

# Cr√©e l‚Äôutilisateur avec un dossier personnel et shell bash
useradd -m -d "$USER_HOME" -s /bin/bash "$USERNAME"

# Force l‚Äôutilisateur √† changer son mot de passe au premier login
passwd "$USERNAME"
chage -d 0 "$USERNAME"

# Cr√©e un dossier .ssh s√©curis√©
mkdir -p "$USER_HOME/.ssh"
chmod 700 "$USER_HOME/.ssh"
chown "$USERNAME:$USERNAME" "$USER_HOME/.ssh"

# Ajoute une cl√© publique SSH si un fichier existe
if [ -f "./authorized_keys" ]; then
    cp ./authorized_keys "$USER_HOME/.ssh/"
    chmod 600 "$USER_HOME/.ssh/authorized_keys"
    chown "$USERNAME:$USERNAME" "$USER_HOME/.ssh/authorized_keys"
    echo "üîë Cl√© SSH ajout√©e depuis authorized_keys"
else
    echo "‚ö†Ô∏è Aucune cl√© SSH trouv√©e. Vous pouvez en ajouter manuellement dans $USER_HOME/.ssh/authorized_keys"
fi

# Ajoute l‚Äôutilisateur au groupe sudo
usermod -aG sudo "$USERNAME"

echo "‚úÖ Utilisateur $USERNAME cr√©√© avec succ√®s."
echo "üëâ Connexion : ssh $USERNAME@<IP_SERVEUR>"
